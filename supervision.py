# mappings in the cmt_renamed scenario
# should be relavant for all cmt scenarios

cmt_renamed_mapping = {
    "Author": "select id from authors;",
    "Person": "select id from persons;",
    "Co-author": "select id from co_authors;",
    "Conference": "select id from conferences;",
    "Reviewer": "select id from reviewers;",
    "Document": "select id from documents;",
    "PaperFullVersion": "select id from paper_full_versions;",
    "PaperAbstract": "select id from paper_abstracts;",
    "Review": "select id from reviews;",
    'ProgramCommittee': 'select id from program_committees;',
    'ProgramCommitteeMember': 'select id from pc_members;',
    'ProgramCommitteeChair': 'select id from program_committee_chairs;',    
    'name': 'select id, name from persons union (select id, name from conferences);',
    'email': 'select id, email from persons;',
    'date': 'select id, date from conferences;',
    'label': 'select id, label from program_committees;',
    'paperID': 'select id, paper_id from papers;',
    'title': 'select id, title from papers;',
    'comment': 'select id, comment from reviews;',
    'siteURL': 'select id, site_url from conferences;',
    'hasAuthor': 'select id, author from papers;',
    'co-writePaper': 'select cid, pid from co_author_paper;',
    'hasBeenAssigned': 'select rid, pid from paper_reviewer;',
    'writeReview': 'select written, id from reviews;',
    'hasProgramCommitteeMember': 'select program_committee, program_committee_member from program_committee_members join conf_members on conf_members.id=program_committee_members.program_committee_member;',
    'hasConferenceMember': 'select conference, conference_member from conference_members join conf_members on conf_members.id=conference_members.conference_member;',
}

cmt_structured_mapping = {
    "Author": 'select "ID" from "Person" where "is_Author"=true;',
    "Person": 'select "ID" from "Person";',
    "Co-author": 'select "ID" from "Person" where "is_Co-author"=true;',
    'Conference': 'select "ID" from "Conference";',
    'Reviewer': 'select "ID" from "Person" where "is_Reviewer"=true;',
    'Document': 'select "ID" from "Document";',
    'PaperFullVersion': 'select "ID" from "Paper" where "TYPE"=1;',
    'PaperAbstract': 'select "ID" from "Paper" where "TYPE"=2;',
    'Review': 'select "ID" from "Review";',
    'ProgramCommittee': 'select "ID" from "ProgramCommittee";',
    'ProgramCommitteeMember': 'select "ID" from "ProgramCommitteeMember";',
    'ProgramCommitteeChair': 'select "ID" from "ProgramCommitteeChair";',
    'name': 'select "ID", "name" from "Person" union (select "ID", "name" from "Conference");', 
    'email': 'select "ID", "email" from "Person";',
    'date': 'select "ID", "date" from "Conference";',    
    'label': 'select "ID", "label" from "ProgramCommittee";',
    'paperID': 'select "ID", "paperID" from "Paper";',
    'title': 'select "ID", "title" from "Paper";',
    'comment': 'select "ID", "comment" from "Review";',
    'siteURL': 'select "ID", "siteURL" from "Conference";',
    'hasAuthor': 'select "ID", "hasAuthor" from "Paper";',
    'co-writePaper': 'select "Co-author", "Paper" from "co-writePaper";',
    'hasBeenAssigned': 'select "Reviewer", "Paper" from "assignedTo";',    
    'writeReview': 'select "writtenBy", "ID" from "Review";',
    'hasProgramCommitteeMember': 'select "ProgramCommittee", "ProgramCommitteeMember" from "hasProgramCommitteeMember"  join "ProgramCommitteeMember" on "hasProgramCommitteeMember"."ProgramCommitteeMember"="ProgramCommitteeMember"."ID";',
    'hasConferenceMember': 'select "Conference", "ConferenceMember" from "hasConferenceMember";',
}

cmt_structured_ci_mapping = {
    "Author": 'select id from "person" where "is_author"=true;',
    "Person": 'select id from "person";',
    "Co-author": 'select id from "person" where "is_co-author"=true;',
    'Conference': 'select id from "conference";',
    'Reviewer': 'select id from "person" where "is_reviewer"=true;',
    'Document': 'select id from "document";',
    'PaperFullVersion': 'select id from "paper" where "type"=1;',
    'PaperAbstract': 'select id from "paper" where "type"=2;',
    'Review': 'select id from "review";',
    'ProgramCommittee': 'select id from "programcommittee";',
    'ProgramCommitteeMember': 'select id from "programcommitteemember";',
    'ProgramCommitteeChair': 'select id from "programcommitteechair";',
    'name': 'select id, "name" from "person" union (select id, "name" from "conference");', 
    'email': 'select id, "email" from "person";',
    'date': 'select id, "date" from "conference";',    
    'label': 'select id, "label" from "programcommittee";',
    'paperID': 'select id, "paperid" from "paper";',
    'title': 'select id, "title" from "paper";',
    'comment': 'select id, "comment" from "review";',
    'siteURL': 'select id, "siteurl" from "conference";',
    'hasAuthor': 'select id, "hasauthor" from "paper";',
    'co-writePaper': 'select "co-author", "paper" from "co_writepaper";',
    'hasBeenAssigned': 'select "reviewer", "paper" from "assignedto";',    
    'writeReview': 'select "writtenby", id from "review";',
    'hasProgramCommitteeMember': 'select "programcommittee", "programcommitteemember" from "hasprogramcommitteemember"  join "programcommitteemember" on "hasprogramcommitteemember"."programcommitteemember"="programcommitteemember".id;',
    'hasConferenceMember': 'select "conference", "conferencemember" from "hasconferencemember";',
}

cmt_naive_mapping = {
    "Author": 'select "ID" from "Author";',
    "Person": 'select "ID" from "Person";',
    "Co-author": 'select "ID" from "Co-author";',
    'Conference': 'select "ID" from "Conference";',
    'Reviewer': 'select "ID" from "Reviewer"',
    'Document': 'select "ID" from "Document";',
    'PaperFullVersion': 'select "ID" from "PaperFullVersion";',
    'PaperAbstract': 'select "ID" from "PaperAbstract";',
    'Review': 'select "ID" from "Review";',
    'ProgramCommittee': 'select "ID" from "ProgramCommittee";',
    'ProgramCommitteeMember': 'select "ID" from "ProgramCommitteeMember";',
    'ProgramCommitteeChair': 'select "ID" from "ProgramCommitteeChair";',
    'name': 'select "ID", "name" from "Person" union (select "ID", "name" from "Conference");', 
    'email': 'select "ID", "email" from "Person";',
    'date': 'select "ID", "date" from "Conference";',    
    'label': 'select "ID", "label" from "ProgramCommittee";',
    'paperID': 'select "ID", "paperID" from "Paper";',
    'title': 'select "ID", "title" from "Paper";',
    'comment': 'select "ID", "comment" from "Review";',
    'siteURL': 'select "ID", "siteURL" from "Conference";',
    'hasAuthor': 'select "ID", "hasAuthor" from "Paper";',
    'co-writePaper': 'select "Co-author", "Paper" from "co-writePaper";',
    'hasBeenAssigned': 'select "Reviewer", "Paper" from "assignedTo";',    
    'writeReview': 'select "writtenBy", "ID" from "Review";',
    'hasProgramCommitteeMember': 'select "ProgramCommittee", "ProgramCommitteeMember" from "hasProgramCommitteeMember"  join "ProgramCommitteeMember" on "hasProgramCommitteeMember"."ProgramCommitteeMember"="ProgramCommitteeMember"."ID";',
    'hasConferenceMember': 'select "Conference", "ConferenceMember" from "hasConferenceMember";',
}

cmt_naive_ci_mapping = {
    "Author": 'select id from author;',
    "Person": 'select id from person;',
    "Co-author": 'select id from co_author;',
    'Conference': 'select id from conference;',
    'Reviewer': 'select id from "reviewer"',
    'Document': 'select id from "document";',
    'PaperFullVersion': 'select id from "paperfullversion";',
    'PaperAbstract': 'select id from "paperabstract";',
    'Review': 'select id from "review";',
    'ProgramCommittee': 'select id from "programcommittee";',
    'ProgramCommitteeMember': 'select id from "programcommitteemember";',
    'ProgramCommitteeChair': 'select id from "programcommitteechair";',
    'name': 'select id, "name" from person union (select id, "name" from conference);', 
    'email': 'select id, "email" from person;',
    'date': 'select id, "date" from conference;',    
    'label': 'select id, "label" from "programcommittee";',
    'paperID': 'select id, "paperid" from "paper";',
    'title': 'select id, "title" from "paper";',
    'comment': 'select id, "comment" from "review";',
    'siteURL': 'select id, "siteurl" from conference;',
    'hasAuthor': 'select id, "hasauthor" from "paper";',
    'co-writePaper': 'select co_author, "paper" from "co_writepaper";',
    'hasBeenAssigned': 'select "reviewer", "paper" from "assignedto";',    
    'writeReview': 'select "writtenby", id from "review";',
    'hasProgramCommitteeMember': 'select "programcommittee", "programcommitteemember" from "hasprogramcommitteemember"  join "programcommitteemember" on "hasprogramcommitteemember"."programcommitteemember"="programcommitteemember".id;',
    'hasConferenceMember': 'select conference, "conferencemember" from "hasconferencemember";',
}

cmt_denormalized_mapping = {
    "Author": 'select "ID" from "Author";',
    "Person": 'select "ID" from "Person";',
    "Co-author": 'select "ID" from "Author" where "TYPE"=2;',
    'Conference': 'select "ID" from "Conference";',
    'Reviewer': 'select "Reviewer" from "Paper"',
    'Document': 'select "ID" from "Document";',
    'PaperFullVersion': 'select "ID" from "Paper" where "TYPE"=2;',
    'PaperAbstract': 'select "ID" from "Paper" where "TYPE"=1;',
    # 'Review': 'select "ID" from "Review";', # NOT IN THE DATABASE
    'ProgramCommittee': 'select "ID" from "ProgramCommittee";',
    'ProgramCommitteeMember': 'select "ID" from "ProgramCommitteeMember";',
    'ProgramCommitteeChair': 'select "ID" from "ProgramCommitteeChair";',
    'name': 'select "ID", "name" from "Person" union (select "ID", "name" from "Conference");', 
    'email': 'select "ID", "email" from "Person";',
    'date': 'select "ID", "date" from "Conference";',    
    # 'label': 'select "ID", "label" from "ProgramCommittee";', # NOT IN THE DATABASE
    'paperID': 'select "ID", "paperID" from "Paper";',
    'title': 'select "ID", "title" from "Paper";',
    # 'comment': 'select "ID", "comment" from "Review";', # NOT IN THE DATABASE
    'siteURL': 'select "ID", "siteURL" from "Conference";',
    'hasAuthor': 'select "ID", "hasAuthor" from "Paper";',
    'co-writePaper': 'select "Co-author", "Paper" from "co-writePaper";',
    'hasBeenAssigned': 'select "Reviewer", "ID" from "Paper";',    
    # 'writeReview': 'select "writtenBy", "ID" from "Review";', # NOT IN THE DATABASE
    'hasProgramCommitteeMember': 'select "ProgramCommittee", "ProgramCommitteeMember" from "hasProgramCommitteeMember"  join "ProgramCommitteeMember" on "hasProgramCommitteeMember"."ProgramCommitteeMember"="ProgramCommitteeMember"."ID";',
    'hasConferenceMember': 'select "Conference", "ConferenceMember" from "hasConferenceMember";',
}

cmt_mixed_mapping = {
    "Author": "select id from persons where author=true;",
    "Person": "select id from persons;",
    "Co-author": "select id from persons where co_author=true;",
    "Conference": "select id from conferences;",
    "Reviewer": "select id from persons where reviewer=true;",
    "Document": "select id from documents;",
    "PaperFullVersion": "select id from papers where type=1;",
    "PaperAbstract": "select id from papers where type=2;",
    "Review": "select id from reviews;",
    'ProgramCommittee': 'select id from program_committees;',
    'ProgramCommitteeMember': 'select id from pc_members;',
    'ProgramCommitteeChair': 'select id from program_committee_chairs;',    
    'name': 'select id, name from persons union (select id, name from conferences);',
    'email': 'select id, email from persons;',
    'date': 'select id, date from conferences;',
    'label': 'select id, label from program_committees;',
    'paperID': 'select id, paper_id from papers;',
    'title': 'select id, title from papers;',
    'comment': 'select id, comment from reviews;',
    'siteURL': 'select id, site_url from conferences;',
    'hasAuthor': 'select id, author from papers;',
    'co-writePaper': 'select co_author, paper from co_write_paper;',
    'hasBeenAssigned': 'select reviewer, paper from paper_person;',
    'writeReview': 'select written, id from reviews;',
    'hasProgramCommitteeMember': 'select program_committee, program_committee_member from program_committee_members join pc_members on pc_members.id=program_committee_members.program_committee_member;',
    'hasConferenceMember': 'select cid, pid from person_conference;',
}

cmt2sigkdd_mapping = {
    "Person": "select id from persons;",
    "Author": "select id from persons where author=true;",
    "Conference": "select id from conferences;",
    "Document": "select id from documents;",
    "Paper": "select id from papers where type=1;",
    "Abstract": "select id from papers where type=2;",
    "Review": "select id from reviews;",
    'Program_Committee': 'select id from program_committees;',
    'Program_Committee_member': 'select id from pc_members;',
    'Program_Chair': 'select id from program_committee_chairs;',    
    'name': 'select id, name from persons union (select id, name from conferences);',
    'E-mail': 'select id, email from persons;',
    'Start_of_conference': 'select id, date from conferences;',
    'label': 'select id, label from program_committees;',
    'hasTitle': 'select id, title from papers;',
    'hasText': 'select id, comment from reviews;',
    'submit': 'select author, id from papers union (select co_author, paper from co_write_paper);',
}

npd_mapping = {
    'dummy': "SELECT x FROM (SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/baa/', CAST(TABLE1.baaNpdidBsnsArrArea AS CHARACTER VARYING), '/licensee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.baaLicenseeDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.baaLicenseeDateValidTo AS CHARACTER VARYING)) AS x FROM bsns_arr_area_licensee_hst TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.baaNpdidBsnsArrArea IS NOT NULL AND TABLE1.baaLicenseeDateValidFrom IS NOT NULL AND TABLE1.baaLicenseeDateValidTo IS NOT NULL) as T;",
    'Agent': "SELECT x FROM (SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/baa/', CAST(TABLE1.baaNpdidBsnsArrArea AS CHARACTER VARYING), '/licensee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.baaLicenseeDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.baaLicenseeDateValidTo AS CHARACTER VARYING)) AS x FROM bsns_arr_area_licensee_hst TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.baaNpdidBsnsArrArea IS NOT NULL AND TABLE1.baaLicenseeDateValidFrom IS NOT NULL AND TABLE1.baaLicenseeDateValidTo IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/field/', CAST(TABLE1.fldNpdidField AS CHARACTER VARYING), '/licensee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.fldLicenseeFrom AS CHARACTER VARYING), '/', CAST(TABLE1.fldLicenseeTo AS CHARACTER VARYING)) AS x FROM field_licensee_hst TABLE1 WHERE TABLE1.fldLicenseeFrom IS NOT NULL AND TABLE1.fldLicenseeTo IS NOT NULL AND TABLE1.fldNpdidField IS NOT NULL AND TABLE1.cmpNpdidCompany IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/petreg/facility/', CAST(TABLE1.tufNpdidTuf AS CHARACTER VARYING), '/licencee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING)) AS x FROM tuf_petreg_licence_licencee TABLE1 WHERE TABLE1.tufNpdidTuf IS NOT NULL AND TABLE1.cmpNpdidCompany IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING), '/licensee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.prlLicenseeDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.prlLicenseeDateValidTo AS CHARACTER VARYING)) AS x FROM licence_licensee_hst TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.prlNpdidLicence IS NOT NULL AND TABLE1.prlLicenseeDateValidFrom IS NOT NULL AND TABLE1.prlLicenseeDateValidTo IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/petreg/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING), '/licencee/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING)) AS x FROM licence_petreg_licence_licencee TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.prlNpdidLicence IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING), '/operator/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.prlOperDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.prlOperDateValidTo AS CHARACTER VARYING)) AS x FROM licence_oper_hst TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.prlNpdidLicence IS NOT NULL AND TABLE1.prlOperDateValidFrom IS NOT NULL AND TABLE1.prlOperDateValidTo IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/facility/', CAST(TABLE1.tufNpdidTuf AS CHARACTER VARYING), '/operator/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.tufOperDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.tufOperDateValidTo AS CHARACTER VARYING)) AS x FROM tuf_operator_hst TABLE1 WHERE TABLE1.tufOperDateValidTo IS NOT NULL AND TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.tufNpdidTuf IS NOT NULL AND TABLE1.tufOperDateValidFrom IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/field/', CAST(TABLE1.fldNpdidField AS CHARACTER VARYING), '/operator/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.fldOperatorFrom AS CHARACTER VARYING), '/', CAST(TABLE1.fldOperatorTo AS CHARACTER VARYING)) AS x FROM field_operator_hst TABLE1 WHERE TABLE1.fldOperatorTo IS NOT NULL AND TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.fldNpdidField IS NOT NULL AND TABLE1.fldOperatorFrom IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/field/', CAST(TABLE1.fldNpdidField AS CHARACTER VARYING), '/owner/', CAST(TABLE1.fldNpdidOwner AS CHARACTER VARYING), '/history/', CAST(TABLE1.fldOwnershipFromDate AS CHARACTER VARYING), '/', CAST(TABLE1.fldOwnershipToDate AS CHARACTER VARYING)) AS x FROM field_owner_hst TABLE1 WHERE TABLE1.fldOwnershipFromDate IS NOT NULL AND TABLE1.fldOwnershipToDate IS NOT NULL AND TABLE1.fldNpdidField IS NOT NULL AND TABLE1.fldNpdidOwner IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/facility/', CAST(TABLE1.tufNpdidTuf AS CHARACTER VARYING), '/owner/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING), '/history/', CAST(TABLE1.tufOwnerDateValidFrom AS CHARACTER VARYING), '/', CAST(TABLE1.tufOwnerDateValidTo AS CHARACTER VARYING)) AS x FROM tuf_owner_hst TABLE1 WHERE TABLE1.tufOwnerDateValidTo IS NOT NULL AND TABLE1.tufNpdidTuf IS NOT NULL AND TABLE1.cmpNpdidCompany IS NOT NULL AND TABLE1.tufOwnerDateValidFrom IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING)) AS x FROM licence TABLE1 WHERE TABLE1.prlNpdidLicence IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/baa/', CAST(TABLE1.baaNpdidBsnsArrArea AS CHARACTER VARYING)) AS x FROM bsns_arr_area TABLE1 WHERE TABLE1.baaNpdidBsnsArrArea IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/company/', CAST(TABLE1.cmpNpdidCompany AS CHARACTER VARYING)) AS x FROM company TABLE1 WHERE TABLE1.cmpNpdidCompany IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/petreg/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING)) AS x FROM licence_petreg_licence_oper TABLE1 WHERE TABLE1.prlNpdidLicence IS NOT NULL UNION ALL SELECT CONCAT('http://sws.ifi.uio.no/data/npd-v2/petreg/licence/', CAST(TABLE1.prlNpdidLicence AS CHARACTER VARYING)) AS x FROM licence_petreg_licence TABLE1 WHERE TABLE1.prlNpdidLicence IS NOT NULL) AS T",
}





cmt_mapping = cmt2sigkdd_mapping
cmt_schema = 'cmt2sigkdd'
    
npd_mapping = npd_mapping
npd_schema = 'npd'
